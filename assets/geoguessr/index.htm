<!DOCTYPE html>
<html>
<style>
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    
    button {
        width: 100px;
        height: 25px;
        color: white;
        background-color: red;
        /* z-index: 5; */
        /* top: 5px; */
    }
    
    #floating-panel {
        position: absolute;
        top: 10px;
        /* left: 5%; */
        z-index: 5;
        background-color: rgb(241, 113, 113);
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: "Roboto", "sans-serif";
        line-height: 30px;
        padding-left: 10px;
        width: 150px;
        /* height: 30%; */
    }
    
    #street-view {
        height: 100%;
        filter: invert();
    }
</style>

<head>
    <title>Street View Containers</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBAoabMyZRVcvAvBOEMFbR69LMbSY8R67k&callback=initialize&libraries=&v=weekly" async></script>


    <!-- <link rel="stylesheet" type="text/css" href="./style.css" /> -->
    <!-- <script src="./index.js"></script> -->
</head>

<body>
    <div id="floating-panel">
        <!-- <h1> If you know where we are, make a guess!</h1> -->
        <h2 id="score"></h2>
        <!-- <button onclick="guess()">Guess</button> -->
    </div>

    <div id="street-view"></div>

    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script src="https://www.gstatic.com/firebasejs/8.4.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.4.1/firebase-database.js"></script>
    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyBSbuwdEwP_SSOBhdmiiwfJiHQ8NU_wQ0w",
            authDomain: "sg-project-trial.firebaseapp.com",
            databaseURL: "https://sg-project-trial-default-rtdb.firebaseio.com",
            projectId: "sg-project-trial",
            storageBucket: "sg-project-trial.appspot.com",
            messagingSenderId: "319429089870",
            appId: "1:319429089870:web:afb35693173a866a2e011f",
            measurementId: "G-R1Z1P5G3DE"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);

        var score = 0

        let panorama


        // Set different places where the player will be spawned
        var places = [
            [{
                lat: 60.171001,
                lng: 24.939350
            }, {
                country: 'Finland'
            }], // Helsinki, Finland
            [{
                lat: 48.858093,
                lng: 2.294694
            }, {
                country: 'France'
            }], // Paris, France
            [{
                lat: 51.510020,
                lng: -0.134730
            }, {
                country: 'Great Britain'
            }], // London, Great Britain
            [{
                lat: 41.8902,
                lng: 12.4922
            }, {
                country: 'Italy'
            }], // Rome, Italy
            [{
                lat: 25.195302,
                lng: 55.272879
            }, {
                country: 'United Arab Emirates'
            }], // Dubai, United Arab Emirates
            [{
                lat: 1.283404,
                lng: 103.863134
            }, {
                country: 'Singapore'
            }], // Marina Bay, Singapore
            [{
                lat: 29.976768,
                lng: 31.135538
            }, {
                country: 'Egypt'
            }], // Cairo, Egypt
            [{
                lat: 40.757876,
                lng: -73.985592
            }, {
                country: 'United States'
            }], // New York, USA
        ]

        let currentPlace = places[Math.floor(Math.random() * (places.length))] // Pick a random place to be spawned
        let coordinates = currentPlace[0] // Get coordinates
        let country = currentPlace[1].country // Get the name of the country

        // Reload game environment when a round is over
        function reconfigure() {


            var readref = firebase.database().ref('Guess/' + 'Score/');
            readref.on('value', (snapshot) => {
                score = snapshot.val();
                console.log(score);

                document.getElementById("score").innerHTML = "Your current score is: " + score;
                currentPlace = places[Math.floor(Math.random() * (places.length))]
                coordinates = currentPlace[0]
                country = currentPlace[1].country
            });

            firebase.database().ref('Guess/').update({
                Country: country,

            });
            initialize()
        }
        while (1) {
            reconfigure()
        }


        // Check if guess is correct and then execute reconfiguring function
        // const guess = () => {
        //     var guess = window.prompt("Where are we? ")
        //     if (guess == country) {
        //         score++
        //         alert("Correct! Current Score: " + score)
        //         reconfigure()
        //     } else {
        //         score = 0
        //         alert("Incorrect! Current Score: " + score)
        //         reconfigure()
        //     }
        // }

        function initialize() {
            panorama = new google.maps.StreetViewPanorama(
                document.getElementById("street-view"), {
                    position: coordinates,
                    pov: {
                        heading: 165,
                        pitch: 0
                    },
                    zoom: 1,
                }
            );
        }
    </script>
</body>


</html>